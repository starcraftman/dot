valid_name bashdb &&
_bashdb() {
  local lngopt shtopt cur prev split=false
  cur=$(_get_cword "=")
  prev="${COMP_WORDS[COMP_CWORD-1]}"
  COMPREPLY=()

  _expand || return 0

  if [ "${__COMP_CACHE_BASHDB}x" = "x" ]; then
    lngopt="$(bashdb --help | command grep -o '\-\-[a-z-]\+')"
    shtopt="$(bashdb --help | command grep -o '\s\+\-\w')"
    __COMP_CACHE_BASHDB=( "$lngopt" "$shtopt" )
    export __COMP_CACHE_BASHDB
  else
    lngopt="${__COMP_CACHE_BASHDB[0]}"
    shtopt="${__COMP_CACHE_BASHDB[1]}"
  fi

  # these options require an argument
  if [[ "${prev}" == -@(A|c) ]] ; then
    return 0
  fi

  _split_longopt && split=true

  case "${prev}" in
    # directory completion
    --library|--tempdir|-L|-T)
      _filedir -d
      return 0
      ;;
    # file completion
    --eval-command|--init-file|-x)
      _filedir
      return 0
      ;;
    # no completion for these
    --basename|--help|--highlight|--no-highlight|--no-init|\
    --quiet|--trace|--version)
      return 0
      ;;
  esac

  $split && return 0

  case "${cur}" in
    -*)
      COMPREPLY=( $(compgen -W \
          "${lngopt} ${shtopt}" -- "${cur}") )
      return 0
      ;;
    *)
      _filedir
      return 0
      ;;
  esac
} &&
complete -F _bashdb ${nospace} bashdb
# vim:set ft=sh:
