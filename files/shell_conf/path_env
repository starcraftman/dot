# All common $PATH modifications go here
# This file gets sourced from ~/.zshrc and ~/.bash_aliases only if not already done

# Must always be sourced
if [ -d "$RVMPATH/scripts" ]; then
    # shellcheck source=/home/starcraftman/.rvm/scripts/rvm
    . "$RVMPATH/scripts/rvm"
fi

# Guard against resourcing, many path changes onetime or costly.
if [ -n "$P" ]; then
    return
fi
############################################################################
# Path Settings
############################################################################
# {{{
# Shortcuts to main configs
export B=~/.bash_aliases
export V=~/.vimrc
export Z=~/.zshrc
export P=~/.shell_conf/path_env
export F=~/.shell_conf/funcs_alias

# .software is for any precompiled programs & libraries I install.
# .opt is for programs compiled from src, sources stay in OPT/src while bins to OPT/bin
export SOFT=~/.software
export OPTDIR=~/.opt
export SHELLD=~/.shell

# Personal scripts go here to stay outside of root.
export SCRIPTS=~/.shell/my_scripts
export DFILES=~/.shell/dot/files

# Local language packages.
export CABAL=~/.cabal
export CARGO_HOME=~/.cargo
export GOPATH=~/.go
export PERLBREW_ROOT=~/.perlbrew
export RVMPATH=~/.rvm
export ANDROID_TOOLS=~/.android/SDK/platform-tools
export SDKMAN_DIR="$HOME/.sdkman"
export NVM_DIR="$HOME/.nvm"
export NPM_PACKS="$HOME/.npm"

# Build $PATH here, last thing on front is first
# /usr/lib/ccache on path -> links gcc, g++ to ccache aliases, put at front.
[ -d "/opt/bin" ]           && export PATH=/opt/bin:$PATH
[ -d "$SOFT/bin" ]          && export PATH=$SOFT/bin:$PATH
[ -d "$SCRIPTS" ]           && export PATH=$SCRIPTS/bin:$PATH
[ -d "$OPTDIR/bin" ]        && export PATH=$OPTDIR/bin:$PATH
[ -d "$HOME/bin" ]          && export PATH=$HOME/bin:$PATH
[ -d "$HOME/.local/bin" ]   && export PATH=$HOME/.local/bin:$PATH
[ -d "$CABAL" ]             && export PATH=$CABAL/bin:$PATH
[ -d "$CARGO_HOME" ]        && export PATH=$CARGO_HOME/bin:$PATH
[ -d "$ANDROID_TOOLS" ]     && export PATH=$ANDROID_TOOLS:$PATH
[ -d "$GOPATH" ]            && export PATH=$GOPATH/bin:$PATH
[ -d "$PERLBREW_ROOT" ]     && export PATH=$PERLBREW_ROOT/bin:$PATH
[ -d "$RVMPATH" ]           && export PATH=$RVMPATH/bin:$PATH
[ -d "/usr/lib/ccache" ]    && export PATH=/usr/lib/ccache:$PATH
[ -d "$NPM_PACKS" ]         && export PATH=$NPM_PACKS/bin:$PATH

# \curl -L https://install.perlbrew.pl | bash
if [ -s "$PERLBREW_ROOT/etc/bashrc" ]; then
    # shellcheck source=/home/starcraftman/.perlbrew/etc/bashrc
    . "$PERLBREW_ROOT/etc/bashrc"
fi

# git clone https://github.com/pyenv/pyenv $SHELLD/pyenv
if [ -s "$SHELLD/pyenv/bin/pyenv" ]; then
    export PYENV_ROOT=$SHELLD/pyenv
    export PATH=$PYENV_ROOT/bin:$PYENV_ROOT/shims:$PATH
    export PYTHON_CONFIGURE_OPTS=--enable-shared
    eval "$(pyenv init --path)"
fi

# http://www.oracle.com/technetwork/java/javase/downloads/jdk10-downloads-4416644.html
if [ -s "$SOFT/jdk/bin/java" ]; then
    export JAVA_HOME=$SOFT/jdk
    export PATH=$JAVA_HOME/bin:$PATH
fi
# https://www.jetbrains.com/idea/download/#section=linux
# https://developer.android.com/studio/index.html#linux-bundle
if [ -d "$SOFT/intelliJ" ] && [ -d "$SOFT/android-studio" ]; then
    export INTELLI_J=$SOFT/intelliJ/bin
    export INTELLI_ANDROID=$SOFT/android-studio/bin
    export ACTIVE_INTELLI=$INTELLI_J
    export PATH=$PATH:$ACTIVE_INTELLI
    # Deprioritize anything in intellij
fi

# RVM -> https://rvm.io/
if [ -d "$RVMPATH/scripts" ]; then
    # shellcheck source=/home/starcraftman/.rvm/scripts/rvm
    . "$RVMPATH/scripts/rvm"
fi

# NVM for node install.
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# SDKMan used to manage JDK and other toolkits like gradle.
# Install: curl -s "https://get.sdkman.io" | bash
if [ -s "$SDKMAN_DIR/bin/sdkman-init.sh" ]; then
    . "$SDKMAN_DIR/bin/sdkman-init.sh"
fi

# Complete aliases in bash
if [ -s "$SHELLD/complete-alias" ]; then
    . "$SHELLD/complete-alias/complete_alias"
fi

# }}}
############################################################################
# Non $PATH Variables
############################################################################
# {{{
# Default editor for things like sudoedit.
if valid_name nvim; then
    export EDITOR=nvim
elif valid_name vim; then
    export EDITOR=vim
fi
export VISUAL=$EDITOR
export GIT_EDITOR=$EDITOR

# If you want to have a fallback path lookup, use CDPAth.
#export CDPATH=~/prog

#CCache Directory
#Info: https://ccache.samba.org/manual.html
#export CCACHE_DISABLE=1
export CCACHE_COMPRESS=1
export CCACHE_DIR=~/.ccache

# Ignore files with these suffixes for bash completion
# NB: For dirs like .bzr, bzr line will ignore anything ending in bzr.
export FIGNORE=bzr:git:hg:svn:.class:.o:.pyc

# Colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# Change grep color to bold blue
export GREP_COLORS='ms=01;34:mc=01;34:sl=:cx=:fn=35:ln=32:bn=32:se=36'

# Merge tool for hg
export HGMERGE=/usr/bin/kdiff3

# Bash history options
# Set large history file & line limit
export HISTFILESIZE=10000
export HISTSIZE=$HISTFILESIZE
export SAVEHIST=$HISTFILESIZE

# Ignore some commands
export HISTIGNORE='ls *:l *:bg:fg:history *'

# Timestamps in history file
export HISTTIMEFORMAT='%F %T '

# Ignore duplicate commands in history
export HISTCONTROL=ignoredups:erasedups

# The number of EOF to ignore before terminating shell
export IGNOREEOF=2

# Default pager
export PAGER=less

# Make ps print useful info
export PS_FORMAT=user,pid,ppid,tty,pcpu,pmem,stat,start_time,cmd

# Set term to 256 color support
if [ -n "$KONSOLE_PROFILE_NAME" ]; then
    export TERM=konsole-256color
elif [ "$TERM" = "xterm" ]; then
    export TERM=xterm-256color
elif [ "$TERM" = "screen" ]; then
    export TERM=screen-256color
fi

# Cache the secrethub credential for an hour
export SECRETHUB_CREDENTIAL_PASSPHRASE_CACHE_TTL=1h
# }}}

# vim:set filetype=sh foldmethod=marker:
